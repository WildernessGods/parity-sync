<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.parity.paritysync.dao.AuthorMapper">
    <resultMap id="BaseResultMap" type="com.parity.paritysync.bean.Author">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="balance" jdbcType="VARCHAR" property="balance"/>
        <result column="transactionsCount" jdbcType="BIGINT" property="transactionscount"/>
        <result column="blocks" jdbcType="BIGINT" property="blocks"/>
        <result column="uncles" jdbcType="BIGINT" property="uncles"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, address, type, balance, transactionsCount, blocks, uncles
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from author
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from author
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.parity.paritysync.bean.Author">
    insert into author (id, address, type, 
      balance, transactionsCount, blocks, 
      uncles)
    values (#{id,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{balance,jdbcType=VARCHAR}, #{transactionscount,jdbcType=BIGINT}, #{blocks,jdbcType=BIGINT},
      #{uncles,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.parity.paritysync.bean.Author">
        insert into author
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="transactionscount != null">
                transactionsCount,
            </if>
            <if test="blocks != null">
                blocks,
            </if>
            <if test="uncles != null">
                uncles,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=VARCHAR},
            </if>
            <if test="transactionscount != null">
                #{transactionscount,jdbcType=BIGINT},
            </if>
            <if test="blocks != null">
                #{blocks,jdbcType=BIGINT},
            </if>
            <if test="uncles != null">
                #{uncles,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <insert id="batchInsertSelective">
        insert into author (address, type, balance, transactionsCount, blocks, uncles)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.address,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, #{item.balance,jdbcType=VARCHAR},
            #{item.transactionscount,jdbcType=BIGINT}, #{item.blocks,jdbcType=BIGINT}, #{item.uncles,jdbcType=BIGINT})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.parity.paritysync.bean.Author">
        update author
        <set>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=VARCHAR},
            </if>
            <if test="transactionscount != null">
                transactionsCount = #{transactionscount,jdbcType=BIGINT},
            </if>
            <if test="blocks != null">
                blocks = #{blocks,jdbcType=BIGINT},
            </if>
            <if test="uncles != null">
                uncles = #{uncles,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.parity.paritysync.bean.Author">
    update author
    set address = #{address,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      balance = #{balance,jdbcType=VARCHAR},
      transactionsCount = #{transactionscount,jdbcType=BIGINT},
      blocks = #{blocks,jdbcType=BIGINT},
      uncles = #{uncles,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByAddress" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from author
        where address = #{address,jdbcType=VARCHAR}
    </select>
    <update id="updateSelectiveByAddress" parameterType="com.parity.paritysync.bean.Author">
        update Author
        <set>
            <if test="balance != null">
                balance = #{balance, jdbcType=VARCHAR},
            </if>
            <if test="transactionscount != null">
                transactionsCount = #{transactionscount, jdbcType=BIGINT},
            </if>
            <if test="blocks != null">
                blocks = #{blocks, jdbcType=BIGINT},
            </if>
            <if test="uncles != null">
                uncles = #{uncles, jdbcType=BIGINT},
            </if>
        </set>
        where address = #{address, jdbcType=VARCHAR}
    </update>
    <update id="updateTransactionsCountByAddress" parameterType="com.parity.paritysync.bean.Author">
        update Author set transactionsCount = transactionsCount + #{transactionscount, jdbcType=BIGINT}
        where address = #{address, jdbcType=VARCHAR}
    </update>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from author
    </select>
</mapper>